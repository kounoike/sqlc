// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: query.sql

package querytest

import (
	"context"
)

const twoJoins = `-- name: TwoJoins :many
SELECT foo.bar_id, foo.baz_id
FROM foo
JOIN bar ON bar.id = bar_id
JOIN baz ON baz.id = baz_id
`

type TwoJoinsRow struct {
	BarID int64
	BazID int64
}

func (q *Queries) TwoJoins(ctx context.Context) ([]TwoJoinsRow, error) {
	rows, err := q.db.QueryContext(ctx, twoJoins)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []TwoJoinsRow
	for rows.Next() {
		var i TwoJoinsRow
		if err := rows.Scan(&i.BarID, &i.BazID); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
